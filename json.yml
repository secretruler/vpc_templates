AWSTemplateFormatVersion: "2010-09-09"
Description: A vpc template for public and private resources
Resources:
  accVpc: 
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 192.168.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true' # DNS hostnames
      Tags:
       - Key: Name
         Value: acc-vpc

  accPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: accVpc
      CidrBlock: 192.168.0.0/20
      AvailabilityZone: "ap-south-1a"
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value: acc-web-subnet

  accPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: accVpc
      CidrBlock: 192.168.16.0/20
      AvailabilityZone: "ap-south-1b"
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value: acc-database-subnet

  accInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: acc-internet-gateway

  accNATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
       AllocationId: !GetAtt accNATGatewayEIP.AllocationId
       SubnetId: !Ref accPublicSubnet
       Tags:
       - Key: Name
         Value: production
  accNATGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
       Domain: vpc
  accRouteNATGateway:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId: !Ref accPrivateRouteTable
       DestinationCidrBlock: '0.0.0.0/0'
       NatGatewayId: !Ref accNATGateway


  accAttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: accVpc
      InternetGatewayId:
        Ref: accInternetGateway

  accPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: accVpc
      Tags:
      - Key: Name
        Value: acc-pub-rt        

  accPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: accVpc
      Tags:
      - Key: Name
        Value: acc-pvt-rt 

  accInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: accAttachInternetGateway
    Properties:
       RouteTableId:
         Ref: accPublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: accInternetGateway   

  accPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: accPublicSubnet
      RouteTableId:
        Ref: accPublicRouteTable

  accPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: accPrivateSubnet
      RouteTableId:
        Ref: accPrivateRouteTable

  accPublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
        VpcId:
          Ref: accVpc
        Tags:
        - Key: Name
          Value: acc-web-nacl

  accPrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
        VpcId:
          Ref: accVpc
        Tags:
        - Key: Name
          Value: acc-database-nacl

  accPublicNACLInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: accPublicNetworkAcl
       RuleNumber: 100
       Protocol: 6 # Only TCP 
       PortRange:
         From: 0
         To: 65535
       RuleAction: allow
       CidrBlock: 0.0.0.0/0

  accPublicNACLOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: accPublicNetworkAcl
       RuleNumber: 100
       Protocol: -1 # Ignores and allows all ports
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0

  accPrivateNACLInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: accPrivateNetworkAcl
       RuleNumber: 100
       Protocol: 6 # Only TCP 
       PortRange:
         From: 0
         To: 65535
       RuleAction: allow
       CidrBlock: 0.0.0.0/0

  accPrivateNACLOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: accPrivateNetworkAcl
       RuleNumber: 100
       Protocol: -1 # Ignores and allows all ports
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0

  accPublicSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: accPublicSubnet
      NetworkAclId:
        Ref: accPublicNetworkAcl

  accPrivateSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: accPrivateSubnet
      NetworkAclId:
        Ref: accPrivateNetworkAcl

  accPublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh http to client host
      VpcId: !Ref accVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  accPrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh  to client host
      VpcId: !Ref accVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 192.168.0.0/16
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

